components:
  responses: {}
  schemas:
    AgentCandidate:
      additionalProperties: false
      properties:
        config:
          $ref: '#/components/schemas/AgentConfig'
        type:
          const: agent
          default: agent
          type: string
      required:
      - type
      - config
      type: object
    AgentConfig:
      additionalProperties: false
      properties:
        client_tools:
          items:
            $ref: '#/components/schemas/ToolDef'
          type: array
        enable_session_persistence:
          type: boolean
        input_shields:
          items:
            type: string
          type: array
        instructions:
          type: string
        max_infer_iters:
          default: 10
          type: integer
        model:
          type: string
        output_shields:
          items:
            type: string
          type: array
        sampling_params:
          $ref: '#/components/schemas/SamplingParams'
        tool_choice:
          $ref: '#/components/schemas/ToolChoice'
          default: auto
        tool_prompt_format:
          $ref: '#/components/schemas/ToolPromptFormat'
          default: json
        toolgroups:
          items:
            $ref: '#/components/schemas/AgentTool'
          type: array
      required:
      - max_infer_iters
      - model
      - instructions
      - enable_session_persistence
      type: object
    AgentCreateResponse:
      additionalProperties: false
      properties:
        agent_id:
          type: string
      required:
      - agent_id
      type: object
    AgentSessionCreateResponse:
      additionalProperties: false
      properties:
        session_id:
          type: string
      required:
      - session_id
      type: object
    AgentStepResponse:
      additionalProperties: false
      properties:
        step:
          oneOf:
          - $ref: '#/components/schemas/InferenceStep'
          - $ref: '#/components/schemas/ToolExecutionStep'
          - $ref: '#/components/schemas/ShieldCallStep'
          - $ref: '#/components/schemas/MemoryRetrievalStep'
      required:
      - step
      type: object
    AgentTool:
      oneOf:
      - type: string
      - additionalProperties: false
        properties:
          args:
            additionalProperties:
              oneOf:
              - type: boolean
              - type: number
              - type: string
              - type: array
              - type: object
            type: object
          name:
            type: string
        required:
        - name
        - args
        type: object
    AgentTurnInputType:
      additionalProperties: false
      properties:
        type:
          const: agent_turn_input
          default: agent_turn_input
          type: string
      required:
      - type
      type: object
    AgentTurnResponseEvent:
      additionalProperties: false
      properties:
        payload:
          oneOf:
          - $ref: '#/components/schemas/AgentTurnResponseStepStartPayload'
          - $ref: '#/components/schemas/AgentTurnResponseStepProgressPayload'
          - $ref: '#/components/schemas/AgentTurnResponseStepCompletePayload'
          - $ref: '#/components/schemas/AgentTurnResponseTurnStartPayload'
          - $ref: '#/components/schemas/AgentTurnResponseTurnCompletePayload'
      required:
      - payload
      title: Streamed agent execution response.
      type: object
    AgentTurnResponseStepCompletePayload:
      additionalProperties: false
      properties:
        event_type:
          const: step_complete
          default: step_complete
          type: string
        step_details:
          oneOf:
          - $ref: '#/components/schemas/InferenceStep'
          - $ref: '#/components/schemas/ToolExecutionStep'
          - $ref: '#/components/schemas/ShieldCallStep'
          - $ref: '#/components/schemas/MemoryRetrievalStep'
        step_id:
          type: string
        step_type:
          enum:
          - inference
          - tool_execution
          - shield_call
          - memory_retrieval
          type: string
      required:
      - event_type
      - step_type
      - step_id
      - step_details
      type: object
    AgentTurnResponseStepProgressPayload:
      additionalProperties: false
      properties:
        delta:
          $ref: '#/components/schemas/ContentDelta'
        event_type:
          const: step_progress
          default: step_progress
          type: string
        step_id:
          type: string
        step_type:
          enum:
          - inference
          - tool_execution
          - shield_call
          - memory_retrieval
          type: string
      required:
      - event_type
      - step_type
      - step_id
      - delta
      type: object
    AgentTurnResponseStepStartPayload:
      additionalProperties: false
      properties:
        event_type:
          const: step_start
          default: step_start
          type: string
        metadata:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        step_id:
          type: string
        step_type:
          enum:
          - inference
          - tool_execution
          - shield_call
          - memory_retrieval
          type: string
      required:
      - event_type
      - step_type
      - step_id
      type: object
    AgentTurnResponseStreamChunk:
      additionalProperties: false
      properties:
        event:
          $ref: '#/components/schemas/AgentTurnResponseEvent'
      required:
      - event
      title: streamed agent turn completion response.
      type: object
    AgentTurnResponseTurnCompletePayload:
      additionalProperties: false
      properties:
        event_type:
          const: turn_complete
          default: turn_complete
          type: string
        turn:
          $ref: '#/components/schemas/Turn'
      required:
      - event_type
      - turn
      type: object
    AgentTurnResponseTurnStartPayload:
      additionalProperties: false
      properties:
        event_type:
          const: turn_start
          default: turn_start
          type: string
        turn_id:
          type: string
      required:
      - event_type
      - turn_id
      type: object
    AggregationFunctionType:
      enum:
      - average
      - median
      - categorical_count
      - accuracy
      type: string
    AppEvalTaskConfig:
      additionalProperties: false
      properties:
        eval_candidate:
          oneOf:
          - $ref: '#/components/schemas/ModelCandidate'
          - $ref: '#/components/schemas/AgentCandidate'
        num_examples:
          type: integer
        scoring_params:
          additionalProperties:
            oneOf:
            - $ref: '#/components/schemas/LLMAsJudgeScoringFnParams'
            - $ref: '#/components/schemas/RegexParserScoringFnParams'
            - $ref: '#/components/schemas/BasicScoringFnParams'
          type: object
        type:
          const: app
          default: app
          type: string
      required:
      - type
      - eval_candidate
      - scoring_params
      type: object
    AppendRowsRequest:
      additionalProperties: false
      properties:
        dataset_id:
          type: string
        rows:
          items:
            additionalProperties:
              oneOf:
              - type: boolean
              - type: number
              - type: string
              - type: array
              - type: object
            type: object
          type: array
      required:
      - dataset_id
      - rows
      type: object
    ArrayType:
      additionalProperties: false
      properties:
        type:
          const: array
          default: array
          type: string
      required:
      - type
      type: object
    BasicScoringFnParams:
      additionalProperties: false
      properties:
        aggregation_functions:
          items:
            $ref: '#/components/schemas/AggregationFunctionType'
          type: array
        type:
          const: basic
          default: basic
          type: string
      required:
      - type
      type: object
    BatchChatCompletionRequest:
      additionalProperties: false
      properties:
        logprobs:
          additionalProperties: false
          properties:
            top_k:
              default: 0
              type: integer
          type: object
        messages_batch:
          items:
            items:
              $ref: '#/components/schemas/Message'
            type: array
          type: array
        model:
          type: string
        sampling_params:
          $ref: '#/components/schemas/SamplingParams'
        tool_choice:
          $ref: '#/components/schemas/ToolChoice'
        tool_prompt_format:
          $ref: '#/components/schemas/ToolPromptFormat'
        tools:
          items:
            $ref: '#/components/schemas/ToolDefinition'
          type: array
      required:
      - model
      - messages_batch
      type: object
    BatchChatCompletionResponse:
      additionalProperties: false
      properties:
        completion_message_batch:
          items:
            $ref: '#/components/schemas/CompletionMessage'
          type: array
      required:
      - completion_message_batch
      type: object
    BatchCompletionRequest:
      additionalProperties: false
      properties:
        content_batch:
          items:
            $ref: '#/components/schemas/InterleavedContent'
          type: array
        logprobs:
          additionalProperties: false
          properties:
            top_k:
              default: 0
              type: integer
          type: object
        model:
          type: string
        sampling_params:
          $ref: '#/components/schemas/SamplingParams'
      required:
      - model
      - content_batch
      type: object
    BatchCompletionResponse:
      additionalProperties: false
      properties:
        completion_message_batch:
          items:
            $ref: '#/components/schemas/CompletionMessage'
          type: array
      required:
      - completion_message_batch
      type: object
    BenchmarkEvalTaskConfig:
      additionalProperties: false
      properties:
        eval_candidate:
          oneOf:
          - $ref: '#/components/schemas/ModelCandidate'
          - $ref: '#/components/schemas/AgentCandidate'
        num_examples:
          type: integer
        type:
          const: benchmark
          default: benchmark
          type: string
      required:
      - type
      - eval_candidate
      type: object
    BooleanType:
      additionalProperties: false
      properties:
        type:
          const: boolean
          default: boolean
          type: string
      required:
      - type
      type: object
    BuiltinTool:
      enum:
      - brave_search
      - wolfram_alpha
      - photogen
      - code_interpreter
      type: string
    CancelTrainingJobRequest:
      additionalProperties: false
      properties:
        job_uuid:
          type: string
      required:
      - job_uuid
      type: object
    ChatCompletionInputType:
      additionalProperties: false
      properties:
        type:
          const: chat_completion_input
          default: chat_completion_input
          type: string
      required:
      - type
      type: object
    ChatCompletionRequest:
      additionalProperties: false
      properties:
        logprobs:
          additionalProperties: false
          properties:
            top_k:
              default: 0
              type: integer
          type: object
        messages:
          items:
            $ref: '#/components/schemas/Message'
          type: array
        model_id:
          type: string
        response_format:
          $ref: '#/components/schemas/ResponseFormat'
        sampling_params:
          $ref: '#/components/schemas/SamplingParams'
        stream:
          type: boolean
        tool_choice:
          $ref: '#/components/schemas/ToolChoice'
        tool_prompt_format:
          $ref: '#/components/schemas/ToolPromptFormat'
        tools:
          items:
            $ref: '#/components/schemas/ToolDefinition'
          type: array
      required:
      - model_id
      - messages
      type: object
    ChatCompletionResponse:
      additionalProperties: false
      properties:
        completion_message:
          $ref: '#/components/schemas/CompletionMessage'
        logprobs:
          items:
            $ref: '#/components/schemas/TokenLogProbs'
          type: array
      required:
      - completion_message
      title: Chat completion response.
      type: object
    ChatCompletionResponseEvent:
      additionalProperties: false
      properties:
        delta:
          $ref: '#/components/schemas/ContentDelta'
        event_type:
          $ref: '#/components/schemas/ChatCompletionResponseEventType'
        logprobs:
          items:
            $ref: '#/components/schemas/TokenLogProbs'
          type: array
        stop_reason:
          $ref: '#/components/schemas/StopReason'
      required:
      - event_type
      - delta
      title: Chat completion response event.
      type: object
    ChatCompletionResponseEventType:
      enum:
      - start
      - complete
      - progress
      type: string
    ChatCompletionResponseStreamChunk:
      additionalProperties: false
      properties:
        event:
          $ref: '#/components/schemas/ChatCompletionResponseEvent'
      required:
      - event
      title: SSE-stream of these events.
      type: object
    Checkpoint:
      description: Checkpoint created during training runs
    CompletionInputType:
      additionalProperties: false
      properties:
        type:
          const: completion_input
          default: completion_input
          type: string
      required:
      - type
      type: object
    CompletionMessage:
      additionalProperties: false
      properties:
        content:
          $ref: '#/components/schemas/InterleavedContent'
        role:
          const: assistant
          default: assistant
          type: string
        stop_reason:
          $ref: '#/components/schemas/StopReason'
        tool_calls:
          items:
            $ref: '#/components/schemas/ToolCall'
          type: array
      required:
      - role
      - content
      - stop_reason
      - tool_calls
      type: object
    CompletionRequest:
      additionalProperties: false
      properties:
        content:
          $ref: '#/components/schemas/InterleavedContent'
        logprobs:
          additionalProperties: false
          properties:
            top_k:
              default: 0
              type: integer
          type: object
        model_id:
          type: string
        response_format:
          $ref: '#/components/schemas/ResponseFormat'
        sampling_params:
          $ref: '#/components/schemas/SamplingParams'
        stream:
          type: boolean
      required:
      - model_id
      - content
      type: object
    CompletionResponse:
      additionalProperties: false
      properties:
        content:
          type: string
        logprobs:
          items:
            $ref: '#/components/schemas/TokenLogProbs'
          type: array
        stop_reason:
          $ref: '#/components/schemas/StopReason'
      required:
      - content
      - stop_reason
      title: Completion response.
      type: object
    CompletionResponseStreamChunk:
      additionalProperties: false
      properties:
        delta:
          type: string
        logprobs:
          items:
            $ref: '#/components/schemas/TokenLogProbs'
          type: array
        stop_reason:
          $ref: '#/components/schemas/StopReason'
      required:
      - delta
      title: streamed completion response.
      type: object
    ContentDelta:
      oneOf:
      - $ref: '#/components/schemas/TextDelta'
      - $ref: '#/components/schemas/ImageDelta'
      - $ref: '#/components/schemas/ToolCallDelta'
    CreateAgentRequest:
      additionalProperties: false
      properties:
        agent_config:
          $ref: '#/components/schemas/AgentConfig'
      required:
      - agent_config
      type: object
    CreateAgentSessionRequest:
      additionalProperties: false
      properties:
        session_name:
          type: string
      required:
      - session_name
      type: object
    CreateAgentTurnRequest:
      additionalProperties: false
      properties:
        documents:
          items:
            additionalProperties: false
            properties:
              content:
                oneOf:
                - type: string
                - $ref: '#/components/schemas/InterleavedContentItem'
                - items:
                    $ref: '#/components/schemas/InterleavedContentItem'
                  type: array
                - $ref: '#/components/schemas/URL'
              mime_type:
                type: string
            required:
            - content
            - mime_type
            type: object
          type: array
        messages:
          items:
            oneOf:
            - $ref: '#/components/schemas/UserMessage'
            - $ref: '#/components/schemas/ToolResponseMessage'
          type: array
        stream:
          type: boolean
        toolgroups:
          items:
            $ref: '#/components/schemas/AgentTool'
          type: array
      required:
      - messages
      type: object
    DPOAlignmentConfig:
      additionalProperties: false
      properties:
        epsilon:
          type: number
        gamma:
          type: number
        reward_clip:
          type: number
        reward_scale:
          type: number
      required:
      - reward_scale
      - reward_clip
      - epsilon
      - gamma
      type: object
    DataConfig:
      additionalProperties: false
      properties:
        batch_size:
          type: integer
        data_format:
          $ref: '#/components/schemas/DatasetFormat'
        dataset_id:
          type: string
        packed:
          default: false
          type: boolean
        shuffle:
          type: boolean
        train_on_input:
          default: false
          type: boolean
        validation_dataset_id:
          type: string
      required:
      - dataset_id
      - batch_size
      - shuffle
      - data_format
      type: object
    Dataset:
      additionalProperties: false
      properties:
        dataset_schema:
          additionalProperties:
            $ref: '#/components/schemas/ParamType'
          type: object
        identifier:
          type: string
        metadata:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        provider_id:
          type: string
        provider_resource_id:
          type: string
        type:
          const: dataset
          default: dataset
          type: string
        url:
          $ref: '#/components/schemas/URL'
      required:
      - identifier
      - provider_resource_id
      - provider_id
      - type
      - dataset_schema
      - url
      - metadata
      type: object
    DatasetFormat:
      enum:
      - instruct
      - dialog
      type: string
    DefaultRAGQueryGeneratorConfig:
      additionalProperties: false
      properties:
        separator:
          default: ' '
          type: string
        type:
          const: default
          default: default
          type: string
      required:
      - type
      - separator
      type: object
    EfficiencyConfig:
      additionalProperties: false
      properties:
        enable_activation_checkpointing:
          default: false
          type: boolean
        enable_activation_offloading:
          default: false
          type: boolean
        fsdp_cpu_offload:
          default: false
          type: boolean
        memory_efficient_fsdp_wrap:
          default: false
          type: boolean
      type: object
    EmbeddingsRequest:
      additionalProperties: false
      properties:
        contents:
          items:
            $ref: '#/components/schemas/InterleavedContent'
          type: array
        model_id:
          type: string
      required:
      - model_id
      - contents
      type: object
    EmbeddingsResponse:
      additionalProperties: false
      properties:
        embeddings:
          items:
            items:
              type: number
            type: array
          type: array
      required:
      - embeddings
      type: object
    EvalTask:
      additionalProperties: false
      properties:
        dataset_id:
          type: string
        identifier:
          type: string
        metadata:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        provider_id:
          type: string
        provider_resource_id:
          type: string
        scoring_functions:
          items:
            type: string
          type: array
        type:
          const: eval_task
          default: eval_task
          type: string
      required:
      - identifier
      - provider_resource_id
      - provider_id
      - type
      - dataset_id
      - scoring_functions
      - metadata
      type: object
    EvaluateResponse:
      additionalProperties: false
      properties:
        generations:
          items:
            additionalProperties:
              oneOf:
              - type: boolean
              - type: number
              - type: string
              - type: array
              - type: object
            type: object
          type: array
        scores:
          additionalProperties:
            $ref: '#/components/schemas/ScoringResult'
          type: object
      required:
      - generations
      - scores
      type: object
    EvaluateRowsRequest:
      additionalProperties: false
      properties:
        input_rows:
          items:
            additionalProperties:
              oneOf:
              - type: boolean
              - type: number
              - type: string
              - type: array
              - type: object
            type: object
          type: array
        scoring_functions:
          items:
            type: string
          type: array
        task_config:
          oneOf:
          - $ref: '#/components/schemas/BenchmarkEvalTaskConfig'
          - $ref: '#/components/schemas/AppEvalTaskConfig'
      required:
      - input_rows
      - scoring_functions
      - task_config
      type: object
    GreedySamplingStrategy:
      additionalProperties: false
      properties:
        type:
          const: greedy
          default: greedy
          type: string
      required:
      - type
      type: object
    HealthInfo:
      additionalProperties: false
      properties:
        status:
          type: string
      required:
      - status
      type: object
    ImageContentItem:
      additionalProperties: false
      properties:
        image:
          additionalProperties: false
          properties:
            data:
              contentEncoding: base64
              type: string
            url:
              $ref: '#/components/schemas/URL'
          type: object
        type:
          const: image
          default: image
          type: string
      required:
      - type
      - image
      type: object
    ImageDelta:
      additionalProperties: false
      properties:
        image:
          contentEncoding: base64
          type: string
        type:
          const: image
          default: image
          type: string
      required:
      - type
      - image
      type: object
    InferenceStep:
      additionalProperties: false
      properties:
        completed_at:
          format: date-time
          type: string
        model_response:
          $ref: '#/components/schemas/CompletionMessage'
        started_at:
          format: date-time
          type: string
        step_id:
          type: string
        step_type:
          const: inference
          default: inference
          type: string
        turn_id:
          type: string
      required:
      - turn_id
      - step_id
      - step_type
      - model_response
      type: object
    InsertChunksRequest:
      additionalProperties: false
      properties:
        chunks:
          items:
            additionalProperties: false
            properties:
              content:
                $ref: '#/components/schemas/InterleavedContent'
              metadata:
                additionalProperties:
                  oneOf:
                  - type: boolean
                  - type: number
                  - type: string
                  - type: array
                  - type: object
                type: object
            required:
            - content
            - metadata
            type: object
          type: array
        ttl_seconds:
          type: integer
        vector_db_id:
          type: string
      required:
      - vector_db_id
      - chunks
      type: object
    InsertRequest:
      additionalProperties: false
      properties:
        chunk_size_in_tokens:
          type: integer
        documents:
          items:
            $ref: '#/components/schemas/RAGDocument'
          type: array
        vector_db_id:
          type: string
      required:
      - documents
      - vector_db_id
      - chunk_size_in_tokens
      type: object
    InterleavedContent:
      oneOf:
      - type: string
      - $ref: '#/components/schemas/InterleavedContentItem'
      - items:
          $ref: '#/components/schemas/InterleavedContentItem'
        type: array
    InterleavedContentItem:
      oneOf:
      - $ref: '#/components/schemas/ImageContentItem'
      - $ref: '#/components/schemas/TextContentItem'
    InvokeToolRequest:
      additionalProperties: false
      properties:
        kwargs:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        tool_name:
          type: string
      required:
      - tool_name
      - kwargs
      type: object
    Job:
      additionalProperties: false
      properties:
        job_id:
          type: string
      required:
      - job_id
      type: object
    JobStatus:
      enum:
      - completed
      - in_progress
      - failed
      - scheduled
      type: string
    JsonType:
      additionalProperties: false
      properties:
        type:
          const: json
          default: json
          type: string
      required:
      - type
      type: object
    LLMAsJudgeScoringFnParams:
      additionalProperties: false
      properties:
        aggregation_functions:
          items:
            $ref: '#/components/schemas/AggregationFunctionType'
          type: array
        judge_model:
          type: string
        judge_score_regexes:
          items:
            type: string
          type: array
        prompt_template:
          type: string
        type:
          const: llm_as_judge
          default: llm_as_judge
          type: string
      required:
      - type
      - judge_model
      type: object
    LLMRAGQueryGeneratorConfig:
      additionalProperties: false
      properties:
        model:
          type: string
        template:
          type: string
        type:
          const: llm
          default: llm
          type: string
      required:
      - type
      - model
      - template
      type: object
    ListDatasetsResponse:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/Dataset'
          type: array
      required:
      - data
      type: object
    ListEvalTasksResponse:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/EvalTask'
          type: array
      required:
      - data
      type: object
    ListModelsResponse:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/Model'
          type: array
      required:
      - data
      type: object
    ListPostTrainingJobsResponse:
      additionalProperties: false
      properties:
        data:
          items:
            additionalProperties: false
            properties:
              job_uuid:
                type: string
            required:
            - job_uuid
            type: object
          type: array
      required:
      - data
      type: object
    ListProvidersResponse:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/ProviderInfo'
          type: array
      required:
      - data
      type: object
    ListRoutesResponse:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/RouteInfo'
          type: array
      required:
      - data
      type: object
    ListScoringFunctionsResponse:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/ScoringFn'
          type: array
      required:
      - data
      type: object
    ListShieldsResponse:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/Shield'
          type: array
      required:
      - data
      type: object
    ListToolGroupsResponse:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/ToolGroup'
          type: array
      required:
      - data
      type: object
    ListToolsResponse:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/Tool'
          type: array
      required:
      - data
      type: object
    ListVectorDBsResponse:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/VectorDB'
          type: array
      required:
      - data
      type: object
    LogEventRequest:
      additionalProperties: false
      properties:
        event:
          oneOf:
          - $ref: '#/components/schemas/UnstructuredLogEvent'
          - $ref: '#/components/schemas/MetricEvent'
          - $ref: '#/components/schemas/StructuredLogEvent'
        ttl_seconds:
          type: integer
      required:
      - event
      - ttl_seconds
      type: object
    LogSeverity:
      enum:
      - verbose
      - debug
      - info
      - warn
      - error
      - critical
      type: string
    LoraFinetuningConfig:
      additionalProperties: false
      properties:
        alpha:
          type: integer
        apply_lora_to_mlp:
          type: boolean
        apply_lora_to_output:
          type: boolean
        lora_attn_modules:
          items:
            type: string
          type: array
        quantize_base:
          default: false
          type: boolean
        rank:
          type: integer
        type:
          const: LoRA
          default: LoRA
          type: string
        use_dora:
          default: false
          type: boolean
      required:
      - type
      - lora_attn_modules
      - apply_lora_to_mlp
      - apply_lora_to_output
      - rank
      - alpha
      type: object
    MemoryRetrievalStep:
      additionalProperties: false
      properties:
        completed_at:
          format: date-time
          type: string
        inserted_context:
          $ref: '#/components/schemas/InterleavedContent'
        started_at:
          format: date-time
          type: string
        step_id:
          type: string
        step_type:
          const: memory_retrieval
          default: memory_retrieval
          type: string
        turn_id:
          type: string
        vector_db_ids:
          type: string
      required:
      - turn_id
      - step_id
      - step_type
      - vector_db_ids
      - inserted_context
      type: object
    Message:
      oneOf:
      - $ref: '#/components/schemas/UserMessage'
      - $ref: '#/components/schemas/SystemMessage'
      - $ref: '#/components/schemas/ToolResponseMessage'
      - $ref: '#/components/schemas/CompletionMessage'
    MetricEvent:
      additionalProperties: false
      properties:
        attributes:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        metric:
          type: string
        span_id:
          type: string
        timestamp:
          format: date-time
          type: string
        trace_id:
          type: string
        type:
          const: metric
          default: metric
          type: string
        unit:
          type: string
        value:
          oneOf:
          - type: integer
          - type: number
      required:
      - trace_id
      - span_id
      - timestamp
      - type
      - metric
      - value
      - unit
      type: object
    Model:
      additionalProperties: false
      properties:
        identifier:
          type: string
        metadata:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        model_type:
          $ref: '#/components/schemas/ModelType'
          default: llm
        provider_id:
          type: string
        provider_resource_id:
          type: string
        type:
          const: model
          default: model
          type: string
      required:
      - identifier
      - provider_resource_id
      - provider_id
      - type
      - metadata
      - model_type
      type: object
    ModelCandidate:
      additionalProperties: false
      properties:
        model:
          type: string
        sampling_params:
          $ref: '#/components/schemas/SamplingParams'
        system_message:
          $ref: '#/components/schemas/SystemMessage'
        type:
          const: model
          default: model
          type: string
      required:
      - type
      - model
      - sampling_params
      type: object
    ModelType:
      enum:
      - llm
      - embedding
      type: string
    NumberType:
      additionalProperties: false
      properties:
        type:
          const: number
          default: number
          type: string
      required:
      - type
      type: object
    ObjectType:
      additionalProperties: false
      properties:
        type:
          const: object
          default: object
          type: string
      required:
      - type
      type: object
    OptimizerConfig:
      additionalProperties: false
      properties:
        lr:
          type: number
        num_warmup_steps:
          type: integer
        optimizer_type:
          $ref: '#/components/schemas/OptimizerType'
        weight_decay:
          type: number
      required:
      - optimizer_type
      - lr
      - weight_decay
      - num_warmup_steps
      type: object
    OptimizerType:
      enum:
      - adam
      - adamw
      - sgd
      type: string
    PaginatedRowsResult:
      additionalProperties: false
      properties:
        next_page_token:
          type: string
        rows:
          items:
            additionalProperties:
              oneOf:
              - type: boolean
              - type: number
              - type: string
              - type: array
              - type: object
            type: object
          type: array
        total_count:
          type: integer
      required:
      - rows
      - total_count
      type: object
    ParamType:
      oneOf:
      - $ref: '#/components/schemas/StringType'
      - $ref: '#/components/schemas/NumberType'
      - $ref: '#/components/schemas/BooleanType'
      - $ref: '#/components/schemas/ArrayType'
      - $ref: '#/components/schemas/ObjectType'
      - $ref: '#/components/schemas/JsonType'
      - $ref: '#/components/schemas/UnionType'
      - $ref: '#/components/schemas/ChatCompletionInputType'
      - $ref: '#/components/schemas/CompletionInputType'
      - $ref: '#/components/schemas/AgentTurnInputType'
    PostTrainingJob:
      additionalProperties: false
      properties:
        job_uuid:
          type: string
      required:
      - job_uuid
      type: object
    PostTrainingJobArtifactsResponse:
      additionalProperties: false
      properties:
        checkpoints:
          items:
            $ref: '#/components/schemas/Checkpoint'
          type: array
        job_uuid:
          type: string
      required:
      - job_uuid
      - checkpoints
      title: Artifacts of a finetuning job.
      type: object
    PostTrainingJobStatusResponse:
      additionalProperties: false
      properties:
        checkpoints:
          items:
            $ref: '#/components/schemas/Checkpoint'
          type: array
        completed_at:
          format: date-time
          type: string
        job_uuid:
          type: string
        resources_allocated:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        scheduled_at:
          format: date-time
          type: string
        started_at:
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/JobStatus'
      required:
      - job_uuid
      - status
      - checkpoints
      title: Status of a finetuning job.
      type: object
    PreferenceOptimizeRequest:
      additionalProperties: false
      properties:
        algorithm_config:
          $ref: '#/components/schemas/DPOAlignmentConfig'
        finetuned_model:
          type: string
        hyperparam_search_config:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        job_uuid:
          type: string
        logger_config:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        training_config:
          $ref: '#/components/schemas/TrainingConfig'
      required:
      - job_uuid
      - finetuned_model
      - algorithm_config
      - training_config
      - hyperparam_search_config
      - logger_config
      type: object
    ProviderInfo:
      additionalProperties: false
      properties:
        api:
          type: string
        provider_id:
          type: string
        provider_type:
          type: string
      required:
      - api
      - provider_id
      - provider_type
      type: object
    QATFinetuningConfig:
      additionalProperties: false
      properties:
        group_size:
          type: integer
        quantizer_name:
          type: string
        type:
          const: QAT
          default: QAT
          type: string
      required:
      - type
      - quantizer_name
      - group_size
      type: object
    QueryChunksRequest:
      additionalProperties: false
      properties:
        params:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        query:
          $ref: '#/components/schemas/InterleavedContent'
        vector_db_id:
          type: string
      required:
      - vector_db_id
      - query
      type: object
    QueryChunksResponse:
      additionalProperties: false
      properties:
        chunks:
          items:
            additionalProperties: false
            properties:
              content:
                $ref: '#/components/schemas/InterleavedContent'
              metadata:
                additionalProperties:
                  oneOf:
                  - type: boolean
                  - type: number
                  - type: string
                  - type: array
                  - type: object
                type: object
            required:
            - content
            - metadata
            type: object
          type: array
        scores:
          items:
            type: number
          type: array
      required:
      - chunks
      - scores
      type: object
    QueryCondition:
      additionalProperties: false
      properties:
        key:
          type: string
        op:
          $ref: '#/components/schemas/QueryConditionOp'
        value:
          oneOf:
          - type: boolean
          - type: number
          - type: string
          - type: array
          - type: object
      required:
      - key
      - op
      - value
      type: object
    QueryConditionOp:
      enum:
      - eq
      - ne
      - gt
      - lt
      type: string
    QueryRequest:
      additionalProperties: false
      properties:
        content:
          $ref: '#/components/schemas/InterleavedContent'
        query_config:
          $ref: '#/components/schemas/RAGQueryConfig'
        vector_db_ids:
          items:
            type: string
          type: array
      required:
      - content
      - vector_db_ids
      type: object
    QuerySpanTreeResponse:
      additionalProperties: false
      properties:
        data:
          additionalProperties:
            $ref: '#/components/schemas/SpanWithStatus'
          type: object
      required:
      - data
      type: object
    QuerySpansResponse:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/Span'
          type: array
      required:
      - data
      type: object
    QueryTracesResponse:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/Trace'
          type: array
      required:
      - data
      type: object
    RAGDocument:
      additionalProperties: false
      properties:
        content:
          oneOf:
          - type: string
          - $ref: '#/components/schemas/InterleavedContentItem'
          - items:
              $ref: '#/components/schemas/InterleavedContentItem'
            type: array
          - $ref: '#/components/schemas/URL'
        document_id:
          type: string
        metadata:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        mime_type:
          type: string
      required:
      - document_id
      - content
      - metadata
      type: object
    RAGQueryConfig:
      additionalProperties: false
      properties:
        max_chunks:
          default: 5
          type: integer
        max_tokens_in_context:
          default: 4096
          type: integer
        query_generator_config:
          $ref: '#/components/schemas/RAGQueryGeneratorConfig'
      required:
      - query_generator_config
      - max_tokens_in_context
      - max_chunks
      type: object
    RAGQueryGeneratorConfig:
      oneOf:
      - $ref: '#/components/schemas/DefaultRAGQueryGeneratorConfig'
      - $ref: '#/components/schemas/LLMRAGQueryGeneratorConfig'
    RAGQueryResult:
      additionalProperties: false
      properties:
        content:
          $ref: '#/components/schemas/InterleavedContent'
      type: object
    RegexParserScoringFnParams:
      additionalProperties: false
      properties:
        aggregation_functions:
          items:
            $ref: '#/components/schemas/AggregationFunctionType'
          type: array
        parsing_regexes:
          items:
            type: string
          type: array
        type:
          const: regex_parser
          default: regex_parser
          type: string
      required:
      - type
      type: object
    RegisterDatasetRequest:
      additionalProperties: false
      properties:
        dataset_id:
          type: string
        dataset_schema:
          additionalProperties:
            $ref: '#/components/schemas/ParamType'
          type: object
        metadata:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        provider_dataset_id:
          type: string
        provider_id:
          type: string
        url:
          $ref: '#/components/schemas/URL'
      required:
      - dataset_id
      - dataset_schema
      - url
      type: object
    RegisterEvalTaskRequest:
      additionalProperties: false
      properties:
        dataset_id:
          type: string
        eval_task_id:
          type: string
        metadata:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        provider_eval_task_id:
          type: string
        provider_id:
          type: string
        scoring_functions:
          items:
            type: string
          type: array
      required:
      - eval_task_id
      - dataset_id
      - scoring_functions
      type: object
    RegisterModelRequest:
      additionalProperties: false
      properties:
        metadata:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        model_id:
          type: string
        model_type:
          $ref: '#/components/schemas/ModelType'
        provider_id:
          type: string
        provider_model_id:
          type: string
      required:
      - model_id
      type: object
    RegisterScoringFunctionRequest:
      additionalProperties: false
      properties:
        description:
          type: string
        params:
          oneOf:
          - $ref: '#/components/schemas/LLMAsJudgeScoringFnParams'
          - $ref: '#/components/schemas/RegexParserScoringFnParams'
          - $ref: '#/components/schemas/BasicScoringFnParams'
        provider_id:
          type: string
        provider_scoring_fn_id:
          type: string
        return_type:
          $ref: '#/components/schemas/ParamType'
        scoring_fn_id:
          type: string
      required:
      - scoring_fn_id
      - description
      - return_type
      type: object
    RegisterShieldRequest:
      additionalProperties: false
      properties:
        params:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        provider_id:
          type: string
        provider_shield_id:
          type: string
        shield_id:
          type: string
      required:
      - shield_id
      type: object
    RegisterToolGroupRequest:
      additionalProperties: false
      properties:
        args:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        mcp_endpoint:
          $ref: '#/components/schemas/URL'
        provider_id:
          type: string
        toolgroup_id:
          type: string
      required:
      - toolgroup_id
      - provider_id
      type: object
    RegisterVectorDbRequest:
      additionalProperties: false
      properties:
        embedding_dimension:
          type: integer
        embedding_model:
          type: string
        provider_id:
          type: string
        provider_vector_db_id:
          type: string
        vector_db_id:
          type: string
      required:
      - vector_db_id
      - embedding_model
      type: object
    ResponseFormat:
      oneOf:
      - additionalProperties: false
        properties:
          json_schema:
            additionalProperties:
              oneOf:
              - type: boolean
              - type: number
              - type: string
              - type: array
              - type: object
            type: object
          type:
            const: json_schema
            default: json_schema
            type: string
        required:
        - type
        - json_schema
        type: object
      - additionalProperties: false
        properties:
          bnf:
            additionalProperties:
              oneOf:
              - type: boolean
              - type: number
              - type: string
              - type: array
              - type: object
            type: object
          type:
            const: grammar
            default: grammar
            type: string
        required:
        - type
        - bnf
        type: object
    RouteInfo:
      additionalProperties: false
      properties:
        method:
          type: string
        provider_types:
          items:
            type: string
          type: array
        route:
          type: string
      required:
      - route
      - method
      - provider_types
      type: object
    RunEvalRequest:
      additionalProperties: false
      properties:
        task_config:
          oneOf:
          - $ref: '#/components/schemas/BenchmarkEvalTaskConfig'
          - $ref: '#/components/schemas/AppEvalTaskConfig'
      required:
      - task_config
      type: object
    RunShieldRequest:
      additionalProperties: false
      properties:
        messages:
          items:
            $ref: '#/components/schemas/Message'
          type: array
        params:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        shield_id:
          type: string
      required:
      - shield_id
      - messages
      - params
      type: object
    RunShieldResponse:
      additionalProperties: false
      properties:
        violation:
          $ref: '#/components/schemas/SafetyViolation'
      type: object
    SafetyViolation:
      additionalProperties: false
      properties:
        metadata:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        user_message:
          type: string
        violation_level:
          $ref: '#/components/schemas/ViolationLevel'
      required:
      - violation_level
      - metadata
      type: object
    SamplingParams:
      additionalProperties: false
      properties:
        max_tokens:
          default: 0
          type: integer
        repetition_penalty:
          default: 1.0
          type: number
        strategy:
          oneOf:
          - $ref: '#/components/schemas/GreedySamplingStrategy'
          - $ref: '#/components/schemas/TopPSamplingStrategy'
          - $ref: '#/components/schemas/TopKSamplingStrategy'
      required:
      - strategy
      type: object
    SaveSpansToDatasetRequest:
      additionalProperties: false
      properties:
        attribute_filters:
          items:
            $ref: '#/components/schemas/QueryCondition'
          type: array
        attributes_to_save:
          items:
            type: string
          type: array
        dataset_id:
          type: string
        max_depth:
          type: integer
      required:
      - attribute_filters
      - attributes_to_save
      - dataset_id
      type: object
    ScoreBatchRequest:
      additionalProperties: false
      properties:
        dataset_id:
          type: string
        save_results_dataset:
          type: boolean
        scoring_functions:
          additionalProperties:
            oneOf:
            - oneOf:
              - $ref: '#/components/schemas/LLMAsJudgeScoringFnParams'
              - $ref: '#/components/schemas/RegexParserScoringFnParams'
              - $ref: '#/components/schemas/BasicScoringFnParams'
          type: object
      required:
      - dataset_id
      - scoring_functions
      - save_results_dataset
      type: object
    ScoreBatchResponse:
      additionalProperties: false
      properties:
        dataset_id:
          type: string
        results:
          additionalProperties:
            $ref: '#/components/schemas/ScoringResult'
          type: object
      required:
      - results
      type: object
    ScoreRequest:
      additionalProperties: false
      properties:
        input_rows:
          items:
            additionalProperties:
              oneOf:
              - type: boolean
              - type: number
              - type: string
              - type: array
              - type: object
            type: object
          type: array
        scoring_functions:
          additionalProperties:
            oneOf:
            - oneOf:
              - $ref: '#/components/schemas/LLMAsJudgeScoringFnParams'
              - $ref: '#/components/schemas/RegexParserScoringFnParams'
              - $ref: '#/components/schemas/BasicScoringFnParams'
          type: object
      required:
      - input_rows
      - scoring_functions
      type: object
    ScoreResponse:
      additionalProperties: false
      properties:
        results:
          additionalProperties:
            $ref: '#/components/schemas/ScoringResult'
          type: object
      required:
      - results
      type: object
    ScoringFn:
      additionalProperties: false
      properties:
        description:
          type: string
        identifier:
          type: string
        metadata:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        params:
          oneOf:
          - $ref: '#/components/schemas/LLMAsJudgeScoringFnParams'
          - $ref: '#/components/schemas/RegexParserScoringFnParams'
          - $ref: '#/components/schemas/BasicScoringFnParams'
        provider_id:
          type: string
        provider_resource_id:
          type: string
        return_type:
          $ref: '#/components/schemas/ParamType'
        type:
          const: scoring_function
          default: scoring_function
          type: string
      required:
      - identifier
      - provider_resource_id
      - provider_id
      - type
      - metadata
      - return_type
      type: object
    ScoringResult:
      additionalProperties: false
      properties:
        aggregated_results:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        score_rows:
          items:
            additionalProperties:
              oneOf:
              - type: boolean
              - type: number
              - type: string
              - type: array
              - type: object
            type: object
          type: array
      required:
      - score_rows
      - aggregated_results
      type: object
    Session:
      additionalProperties: false
      properties:
        session_id:
          type: string
        session_name:
          type: string
        started_at:
          format: date-time
          type: string
        turns:
          items:
            $ref: '#/components/schemas/Turn'
          type: array
      required:
      - session_id
      - session_name
      - turns
      - started_at
      title: A single session of an interaction with an Agentic System.
      type: object
    Shield:
      additionalProperties: false
      properties:
        identifier:
          type: string
        params:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        provider_id:
          type: string
        provider_resource_id:
          type: string
        type:
          const: shield
          default: shield
          type: string
      required:
      - identifier
      - provider_resource_id
      - provider_id
      - type
      title: A safety shield resource that can be used to check content
      type: object
    ShieldCallStep:
      additionalProperties: false
      properties:
        completed_at:
          format: date-time
          type: string
        started_at:
          format: date-time
          type: string
        step_id:
          type: string
        step_type:
          const: shield_call
          default: shield_call
          type: string
        turn_id:
          type: string
        violation:
          $ref: '#/components/schemas/SafetyViolation'
      required:
      - turn_id
      - step_id
      - step_type
      type: object
    Span:
      additionalProperties: false
      properties:
        attributes:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        end_time:
          format: date-time
          type: string
        name:
          type: string
        parent_span_id:
          type: string
        span_id:
          type: string
        start_time:
          format: date-time
          type: string
        trace_id:
          type: string
      required:
      - span_id
      - trace_id
      - name
      - start_time
      type: object
    SpanEndPayload:
      additionalProperties: false
      properties:
        status:
          $ref: '#/components/schemas/SpanStatus'
        type:
          const: span_end
          default: span_end
          type: string
      required:
      - type
      - status
      type: object
    SpanStartPayload:
      additionalProperties: false
      properties:
        name:
          type: string
        parent_span_id:
          type: string
        type:
          const: span_start
          default: span_start
          type: string
      required:
      - type
      - name
      type: object
    SpanStatus:
      enum:
      - ok
      - error
      type: string
    SpanWithStatus:
      additionalProperties: false
      properties:
        attributes:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        end_time:
          format: date-time
          type: string
        name:
          type: string
        parent_span_id:
          type: string
        span_id:
          type: string
        start_time:
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/SpanStatus'
        trace_id:
          type: string
      required:
      - span_id
      - trace_id
      - name
      - start_time
      type: object
    StopReason:
      enum:
      - end_of_turn
      - end_of_message
      - out_of_tokens
      type: string
    StringType:
      additionalProperties: false
      properties:
        type:
          const: string
          default: string
          type: string
      required:
      - type
      type: object
    StructuredLogEvent:
      additionalProperties: false
      properties:
        attributes:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        payload:
          oneOf:
          - $ref: '#/components/schemas/SpanStartPayload'
          - $ref: '#/components/schemas/SpanEndPayload'
        span_id:
          type: string
        timestamp:
          format: date-time
          type: string
        trace_id:
          type: string
        type:
          const: structured_log
          default: structured_log
          type: string
      required:
      - trace_id
      - span_id
      - timestamp
      - type
      - payload
      type: object
    SupervisedFineTuneRequest:
      additionalProperties: false
      properties:
        algorithm_config:
          oneOf:
          - $ref: '#/components/schemas/LoraFinetuningConfig'
          - $ref: '#/components/schemas/QATFinetuningConfig'
        checkpoint_dir:
          type: string
        hyperparam_search_config:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        job_uuid:
          type: string
        logger_config:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        model:
          type: string
        training_config:
          $ref: '#/components/schemas/TrainingConfig'
      required:
      - job_uuid
      - training_config
      - hyperparam_search_config
      - logger_config
      - model
      type: object
    SyntheticDataGenerateRequest:
      additionalProperties: false
      properties:
        dialogs:
          items:
            $ref: '#/components/schemas/Message'
          type: array
        filtering_function:
          enum:
          - none
          - random
          - top_k
          - top_p
          - top_k_top_p
          - sigmoid
          title: The type of filtering function.
          type: string
        model:
          type: string
      required:
      - dialogs
      - filtering_function
      type: object
    SyntheticDataGenerationResponse:
      additionalProperties: false
      properties:
        statistics:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        synthetic_data:
          items:
            additionalProperties:
              oneOf:
              - type: boolean
              - type: number
              - type: string
              - type: array
              - type: object
            type: object
          type: array
      required:
      - synthetic_data
      title: Response from the synthetic data generation. Batch of (prompt, response,
        score) tuples that pass the threshold.
      type: object
    SystemMessage:
      additionalProperties: false
      properties:
        content:
          $ref: '#/components/schemas/InterleavedContent'
        role:
          const: system
          default: system
          type: string
      required:
      - role
      - content
      type: object
    TextContentItem:
      additionalProperties: false
      properties:
        text:
          type: string
        type:
          const: text
          default: text
          type: string
      required:
      - type
      - text
      type: object
    TextDelta:
      additionalProperties: false
      properties:
        text:
          type: string
        type:
          const: text
          default: text
          type: string
      required:
      - type
      - text
      type: object
    TokenLogProbs:
      additionalProperties: false
      properties:
        logprobs_by_token:
          additionalProperties:
            type: number
          type: object
      required:
      - logprobs_by_token
      type: object
    Tool:
      additionalProperties: false
      properties:
        description:
          type: string
        identifier:
          type: string
        metadata:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        parameters:
          items:
            $ref: '#/components/schemas/ToolParameter'
          type: array
        provider_id:
          type: string
        provider_resource_id:
          type: string
        tool_host:
          $ref: '#/components/schemas/ToolHost'
        toolgroup_id:
          type: string
        type:
          const: tool
          default: tool
          type: string
      required:
      - identifier
      - provider_resource_id
      - provider_id
      - type
      - toolgroup_id
      - tool_host
      - description
      - parameters
      type: object
    ToolCall:
      additionalProperties: false
      properties:
        arguments:
          additionalProperties:
            oneOf:
            - type: string
            - type: integer
            - type: number
            - type: boolean
            - items:
                oneOf:
                - type: string
                - type: integer
                - type: number
                - type: boolean
              type: array
            - additionalProperties:
                oneOf:
                - type: string
                - type: integer
                - type: number
                - type: boolean
              type: object
          type: object
        call_id:
          type: string
        tool_name:
          oneOf:
          - $ref: '#/components/schemas/BuiltinTool'
          - type: string
      required:
      - call_id
      - tool_name
      - arguments
      type: object
    ToolCallDelta:
      additionalProperties: false
      properties:
        parse_status:
          $ref: '#/components/schemas/ToolCallParseStatus'
        tool_call:
          oneOf:
          - type: string
          - $ref: '#/components/schemas/ToolCall'
        type:
          const: tool_call
          default: tool_call
          type: string
      required:
      - type
      - tool_call
      - parse_status
      type: object
    ToolCallParseStatus:
      enum:
      - started
      - in_progress
      - failed
      - succeeded
      type: string
    ToolChoice:
      enum:
      - auto
      - required
      type: string
    ToolDef:
      additionalProperties: false
      properties:
        description:
          type: string
        metadata:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        name:
          type: string
        parameters:
          items:
            $ref: '#/components/schemas/ToolParameter'
          type: array
      required:
      - name
      type: object
    ToolDefinition:
      additionalProperties: false
      properties:
        description:
          type: string
        parameters:
          additionalProperties:
            $ref: '#/components/schemas/ToolParamDefinition'
          type: object
        tool_name:
          oneOf:
          - $ref: '#/components/schemas/BuiltinTool'
          - type: string
      required:
      - tool_name
      type: object
    ToolExecutionStep:
      additionalProperties: false
      properties:
        completed_at:
          format: date-time
          type: string
        started_at:
          format: date-time
          type: string
        step_id:
          type: string
        step_type:
          const: tool_execution
          default: tool_execution
          type: string
        tool_calls:
          items:
            $ref: '#/components/schemas/ToolCall'
          type: array
        tool_responses:
          items:
            $ref: '#/components/schemas/ToolResponse'
          type: array
        turn_id:
          type: string
      required:
      - turn_id
      - step_id
      - step_type
      - tool_calls
      - tool_responses
      type: object
    ToolGroup:
      additionalProperties: false
      properties:
        args:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        identifier:
          type: string
        mcp_endpoint:
          $ref: '#/components/schemas/URL'
        provider_id:
          type: string
        provider_resource_id:
          type: string
        type:
          const: tool_group
          default: tool_group
          type: string
      required:
      - identifier
      - provider_resource_id
      - provider_id
      - type
      type: object
    ToolHost:
      enum:
      - distribution
      - client
      - model_context_protocol
      type: string
    ToolInvocationResult:
      additionalProperties: false
      properties:
        content:
          $ref: '#/components/schemas/InterleavedContent'
        error_code:
          type: integer
        error_message:
          type: string
      required:
      - content
      type: object
    ToolParamDefinition:
      additionalProperties: false
      properties:
        default:
          oneOf:
          - type: boolean
          - type: number
          - type: string
          - type: array
          - type: object
        description:
          type: string
        param_type:
          type: string
        required:
          default: true
          type: boolean
      required:
      - param_type
      type: object
    ToolParameter:
      additionalProperties: false
      properties:
        default:
          oneOf:
          - type: boolean
          - type: number
          - type: string
          - type: array
          - type: object
        description:
          type: string
        name:
          type: string
        parameter_type:
          type: string
        required:
          default: true
          type: boolean
      required:
      - name
      - parameter_type
      - description
      - required
      type: object
    ToolPromptFormat:
      description: "`json` --\n    Refers to the json format for calling tools.\n\
        \    The json format takes the form like\n    {\n        \"type\": \"function\"\
        ,\n        \"function\" : {\n            \"name\": \"function_name\",\n  \
        \          \"description\": \"function_description\",\n            \"parameters\"\
        : {...}\n        }\n    }\n\n`function_tag` --\n    This is an example of\
        \ how you could define\n    your own user defined format for making tool calls.\n\
        \    The function_tag format looks like this,\n    <function=function_name>(parameters)</function>\n\
        \nThe detailed prompts for each of these formats are added to llama cli"
      enum:
      - json
      - function_tag
      - python_list
      title: This Enum refers to the prompt format for calling custom / zero shot
        tools
      type: string
    ToolResponse:
      additionalProperties: false
      properties:
        call_id:
          type: string
        content:
          $ref: '#/components/schemas/InterleavedContent'
        tool_name:
          oneOf:
          - $ref: '#/components/schemas/BuiltinTool'
          - type: string
      required:
      - call_id
      - tool_name
      - content
      type: object
    ToolResponseMessage:
      additionalProperties: false
      properties:
        call_id:
          type: string
        content:
          $ref: '#/components/schemas/InterleavedContent'
        role:
          const: tool
          default: tool
          type: string
        tool_name:
          oneOf:
          - $ref: '#/components/schemas/BuiltinTool'
          - type: string
      required:
      - role
      - call_id
      - tool_name
      - content
      type: object
    TopKSamplingStrategy:
      additionalProperties: false
      properties:
        top_k:
          type: integer
        type:
          const: top_k
          default: top_k
          type: string
      required:
      - type
      - top_k
      type: object
    TopPSamplingStrategy:
      additionalProperties: false
      properties:
        temperature:
          type: number
        top_p:
          default: 0.95
          type: number
        type:
          const: top_p
          default: top_p
          type: string
      required:
      - type
      type: object
    Trace:
      additionalProperties: false
      properties:
        end_time:
          format: date-time
          type: string
        root_span_id:
          type: string
        start_time:
          format: date-time
          type: string
        trace_id:
          type: string
      required:
      - trace_id
      - root_span_id
      - start_time
      type: object
    TrainingConfig:
      additionalProperties: false
      properties:
        data_config:
          $ref: '#/components/schemas/DataConfig'
        dtype:
          default: bf16
          type: string
        efficiency_config:
          $ref: '#/components/schemas/EfficiencyConfig'
        gradient_accumulation_steps:
          type: integer
        max_steps_per_epoch:
          type: integer
        max_validation_steps:
          type: integer
        n_epochs:
          type: integer
        optimizer_config:
          $ref: '#/components/schemas/OptimizerConfig'
      required:
      - n_epochs
      - max_steps_per_epoch
      - gradient_accumulation_steps
      - max_validation_steps
      - data_config
      - optimizer_config
      type: object
    Turn:
      additionalProperties: false
      properties:
        completed_at:
          format: date-time
          type: string
        input_messages:
          items:
            oneOf:
            - $ref: '#/components/schemas/UserMessage'
            - $ref: '#/components/schemas/ToolResponseMessage'
          type: array
        output_attachments:
          items:
            additionalProperties: false
            properties:
              content:
                oneOf:
                - type: string
                - $ref: '#/components/schemas/InterleavedContentItem'
                - items:
                    $ref: '#/components/schemas/InterleavedContentItem'
                  type: array
                - $ref: '#/components/schemas/URL'
              mime_type:
                type: string
            required:
            - content
            - mime_type
            type: object
          type: array
        output_message:
          $ref: '#/components/schemas/CompletionMessage'
        session_id:
          type: string
        started_at:
          format: date-time
          type: string
        steps:
          items:
            oneOf:
            - $ref: '#/components/schemas/InferenceStep'
            - $ref: '#/components/schemas/ToolExecutionStep'
            - $ref: '#/components/schemas/ShieldCallStep'
            - $ref: '#/components/schemas/MemoryRetrievalStep'
          type: array
        turn_id:
          type: string
      required:
      - turn_id
      - session_id
      - input_messages
      - steps
      - output_message
      - output_attachments
      - started_at
      title: A single turn in an interaction with an Agentic System.
      type: object
    URL:
      additionalProperties: false
      properties:
        uri:
          type: string
      required:
      - uri
      type: object
    UnionType:
      additionalProperties: false
      properties:
        type:
          const: union
          default: union
          type: string
      required:
      - type
      type: object
    UnstructuredLogEvent:
      additionalProperties: false
      properties:
        attributes:
          additionalProperties:
            oneOf:
            - type: boolean
            - type: number
            - type: string
            - type: array
            - type: object
          type: object
        message:
          type: string
        severity:
          $ref: '#/components/schemas/LogSeverity'
        span_id:
          type: string
        timestamp:
          format: date-time
          type: string
        trace_id:
          type: string
        type:
          const: unstructured_log
          default: unstructured_log
          type: string
      required:
      - trace_id
      - span_id
      - timestamp
      - type
      - message
      - severity
      type: object
    UserMessage:
      additionalProperties: false
      properties:
        content:
          $ref: '#/components/schemas/InterleavedContent'
        context:
          $ref: '#/components/schemas/InterleavedContent'
        role:
          const: user
          default: user
          type: string
      required:
      - role
      - content
      type: object
    VectorDB:
      additionalProperties: false
      properties:
        embedding_dimension:
          type: integer
        embedding_model:
          type: string
        identifier:
          type: string
        provider_id:
          type: string
        provider_resource_id:
          type: string
        type:
          const: vector_db
          default: vector_db
          type: string
      required:
      - identifier
      - provider_resource_id
      - provider_id
      - type
      - embedding_model
      - embedding_dimension
      type: object
    VersionInfo:
      additionalProperties: false
      properties:
        version:
          type: string
      required:
      - version
      type: object
    ViolationLevel:
      enum:
      - info
      - warn
      - error
      type: string
info:
  description: "This is the specification of the Llama Stack that provides\n     \
    \           a set of endpoints and their corresponding interfaces that are tailored\
    \ to\n                best leverage Llama Models."
  title: Llama Stack Specification
  version: v1
jsonSchemaDialect: https://json-schema.org/draft/2020-12/schema
openapi: 3.1.0
paths:
  /v1/agents:
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAgentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentCreateResponse'
          description: OK
      tags:
      - Agents
  /v1/agents/{agent_id}:
    delete:
      parameters:
      - in: path
        name: agent_id
        required: true
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
      tags:
      - Agents
  /v1/agents/{agent_id}/session:
    post:
      parameters:
      - in: path
        name: agent_id
        required: true
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAgentSessionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentSessionCreateResponse'
          description: OK
      tags:
      - Agents
  /v1/agents/{agent_id}/session/{session_id}:
    delete:
      parameters:
      - in: path
        name: session_id
        required: true
        schema:
          type: string
      - in: path
        name: agent_id
        required: true
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
      tags:
      - Agents
    get:
      parameters:
      - in: path
        name: session_id
        required: true
        schema:
          type: string
      - in: path
        name: agent_id
        required: true
        schema:
          type: string
      - in: query
        name: turn_ids
        required: false
        schema:
          items:
            type: string
          type: array
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: OK
      tags:
      - Agents
  /v1/agents/{agent_id}/session/{session_id}/turn:
    post:
      parameters:
      - in: path
        name: agent_id
        required: true
        schema:
          type: string
      - in: path
        name: session_id
        required: true
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAgentTurnRequest'
        required: true
      responses:
        '200':
          content:
            text/event-stream:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Turn'
                - $ref: '#/components/schemas/AgentTurnResponseStreamChunk'
          description: A single turn in an interaction with an Agentic System. **OR**
            streamed agent turn completion response.
      tags:
      - Agents
  /v1/agents/{agent_id}/session/{session_id}/turn/{turn_id}:
    get:
      parameters:
      - in: path
        name: agent_id
        required: true
        schema:
          type: string
      - in: path
        name: session_id
        required: true
        schema:
          type: string
      - in: path
        name: turn_id
        required: true
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Turn'
          description: OK
      tags:
      - Agents
  /v1/agents/{agent_id}/session/{session_id}/turn/{turn_id}/step/{step_id}:
    get:
      parameters:
      - in: path
        name: agent_id
        required: true
        schema:
          type: string
      - in: path
        name: session_id
        required: true
        schema:
          type: string
      - in: path
        name: turn_id
        required: true
        schema:
          type: string
      - in: path
        name: step_id
        required: true
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentStepResponse'
          description: OK
      tags:
      - Agents
  /v1/batch-inference/chat-completion:
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchChatCompletionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchChatCompletionResponse'
          description: OK
      tags:
      - BatchInference (Coming Soon)
  /v1/batch-inference/completion:
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCompletionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCompletionResponse'
          description: OK
      tags:
      - BatchInference (Coming Soon)
  /v1/datasetio/rows:
    get:
      parameters:
      - in: query
        name: dataset_id
        required: true
        schema:
          type: string
      - in: query
        name: rows_in_page
        required: true
        schema:
          type: integer
      - in: query
        name: page_token
        required: false
        schema:
          type: string
      - in: query
        name: filter_condition
        required: false
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRowsResult'
          description: OK
      tags:
      - DatasetIO
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppendRowsRequest'
        required: true
      responses:
        '200':
          description: OK
      tags:
      - DatasetIO
  /v1/datasets:
    get:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetsResponse'
          description: OK
      tags:
      - Datasets
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDatasetRequest'
        required: true
      responses:
        '200':
          description: OK
      tags:
      - Datasets
  /v1/datasets/{dataset_id}:
    delete:
      parameters:
      - in: path
        name: dataset_id
        required: true
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
      tags:
      - Datasets
    get:
      parameters:
      - in: path
        name: dataset_id
        required: true
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Dataset'
          description: OK
      tags:
      - Datasets
  /v1/eval-tasks:
    get:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEvalTasksResponse'
          description: OK
      tags:
      - EvalTasks
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterEvalTaskRequest'
        required: true
      responses:
        '200':
          description: OK
      tags:
      - EvalTasks
  /v1/eval-tasks/{eval_task_id}:
    get:
      parameters:
      - in: path
        name: eval_task_id
        required: true
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/EvalTask'
          description: OK
      tags:
      - EvalTasks
  /v1/eval/tasks/{task_id}/evaluations:
    post:
      parameters:
      - in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluateRowsRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluateResponse'
          description: OK
      tags:
      - Eval
  /v1/eval/tasks/{task_id}/jobs:
    post:
      parameters:
      - in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunEvalRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: OK
      tags:
      - Eval
  /v1/eval/tasks/{task_id}/jobs/{job_id}:
    delete:
      parameters:
      - in: path
        name: task_id
        required: true
        schema:
          type: string
      - in: path
        name: job_id
        required: true
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
      tags:
      - Eval
    get:
      parameters:
      - in: path
        name: task_id
        required: true
        schema:
          type: string
      - in: path
        name: job_id
        required: true
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/JobStatus'
          description: OK
      tags:
      - Eval
  /v1/eval/tasks/{task_id}/jobs/{job_id}/result:
    get:
      parameters:
      - in: path
        name: job_id
        required: true
        schema:
          type: string
      - in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluateResponse'
          description: OK
      tags:
      - Eval
  /v1/health:
    get:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthInfo'
          description: OK
      tags:
      - Inspect
  /v1/inference/chat-completion:
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatCompletionRequest'
        required: true
      responses:
        '200':
          content:
            text/event-stream:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ChatCompletionResponse'
                - $ref: '#/components/schemas/ChatCompletionResponseStreamChunk'
          description: Chat completion response. **OR** SSE-stream of these events.
      tags:
      - Inference
  /v1/inference/completion:
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletionRequest'
        required: true
      responses:
        '200':
          content:
            text/event-stream:
              schema:
                oneOf:
                - $ref: '#/components/schemas/CompletionResponse'
                - $ref: '#/components/schemas/CompletionResponseStreamChunk'
          description: Completion response. **OR** streamed completion response.
      tags:
      - Inference
  /v1/inference/embeddings:
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbeddingsRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddingsResponse'
          description: OK
      tags:
      - Inference
  /v1/inspect/providers:
    get:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProvidersResponse'
          description: OK
      tags:
      - Inspect
  /v1/inspect/routes:
    get:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoutesResponse'
          description: OK
      tags:
      - Inspect
  /v1/models:
    get:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListModelsResponse'
          description: OK
      tags:
      - Models
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterModelRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: OK
      tags:
      - Models
  /v1/models/{model_id}:
    delete:
      parameters:
      - in: path
        name: model_id
        required: true
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
      tags:
      - Models
    get:
      parameters:
      - in: path
        name: model_id
        required: true
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Model'
          description: OK
      tags:
      - Models
  /v1/post-training/job/artifacts:
    get:
      parameters:
      - in: query
        name: job_uuid
        required: true
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/PostTrainingJobArtifactsResponse'
          description: OK
      tags:
      - PostTraining (Coming Soon)
  /v1/post-training/job/cancel:
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelTrainingJobRequest'
        required: true
      responses:
        '200':
          description: OK
      tags:
      - PostTraining (Coming Soon)
  /v1/post-training/job/status:
    get:
      parameters:
      - in: query
        name: job_uuid
        required: true
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/PostTrainingJobStatusResponse'
          description: OK
      tags:
      - PostTraining (Coming Soon)
  /v1/post-training/jobs:
    get:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPostTrainingJobsResponse'
          description: OK
      tags:
      - PostTraining (Coming Soon)
  /v1/post-training/preference-optimize:
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreferenceOptimizeRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTrainingJob'
          description: OK
      tags:
      - PostTraining (Coming Soon)
  /v1/post-training/supervised-fine-tune:
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupervisedFineTuneRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTrainingJob'
          description: OK
      tags:
      - PostTraining (Coming Soon)
  /v1/safety/run-shield:
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunShieldRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunShieldResponse'
          description: OK
      tags:
      - Safety
  /v1/scoring-functions:
    get:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScoringFunctionsResponse'
          description: OK
      tags:
      - ScoringFunctions
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterScoringFunctionRequest'
        required: true
      responses:
        '200':
          description: OK
      tags:
      - ScoringFunctions
  /v1/scoring-functions/{scoring_fn_id}:
    get:
      parameters:
      - in: path
        name: scoring_fn_id
        required: true
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ScoringFn'
          description: OK
      tags:
      - ScoringFunctions
  /v1/scoring/score:
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreResponse'
          description: OK
      tags:
      - Scoring
  /v1/scoring/score-batch:
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreBatchRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreBatchResponse'
          description: OK
      tags:
      - Scoring
  /v1/shields:
    get:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListShieldsResponse'
          description: OK
      tags:
      - Shields
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterShieldRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shield'
          description: OK
      tags:
      - Shields
  /v1/shields/{identifier}:
    get:
      parameters:
      - in: path
        name: identifier
        required: true
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Shield'
          description: OK
      tags:
      - Shields
  /v1/synthetic-data-generation/generate:
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticDataGenerateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticDataGenerationResponse'
          description: OK
      tags:
      - SyntheticDataGeneration (Coming Soon)
  /v1/telemetry/events:
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogEventRequest'
        required: true
      responses:
        '200':
          description: OK
      tags:
      - Telemetry
  /v1/telemetry/spans:
    get:
      parameters:
      - in: query
        name: attribute_filters
        required: true
        schema:
          items:
            $ref: '#/components/schemas/QueryCondition'
          type: array
      - in: query
        name: attributes_to_return
        required: true
        schema:
          items:
            type: string
          type: array
      - in: query
        name: max_depth
        required: false
        schema:
          type: integer
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerySpansResponse'
          description: OK
      tags:
      - Telemetry
  /v1/telemetry/spans/export:
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveSpansToDatasetRequest'
        required: true
      responses:
        '200':
          description: OK
      tags:
      - Telemetry
  /v1/telemetry/spans/{span_id}/tree:
    get:
      parameters:
      - in: path
        name: span_id
        required: true
        schema:
          type: string
      - in: query
        name: attributes_to_return
        required: false
        schema:
          items:
            type: string
          type: array
      - in: query
        name: max_depth
        required: false
        schema:
          type: integer
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerySpanTreeResponse'
          description: OK
      tags:
      - Telemetry
  /v1/telemetry/traces:
    get:
      parameters:
      - in: query
        name: attribute_filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/QueryCondition'
          type: array
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: order_by
        required: false
        schema:
          items:
            type: string
          type: array
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryTracesResponse'
          description: OK
      tags:
      - Telemetry
  /v1/telemetry/traces/{trace_id}:
    get:
      parameters:
      - in: path
        name: trace_id
        required: true
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trace'
          description: OK
      tags:
      - Telemetry
  /v1/telemetry/traces/{trace_id}/spans/{span_id}:
    get:
      parameters:
      - in: path
        name: trace_id
        required: true
        schema:
          type: string
      - in: path
        name: span_id
        required: true
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Span'
          description: OK
      tags:
      - Telemetry
  /v1/tool-runtime/invoke:
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvokeToolRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolInvocationResult'
          description: OK
      summary: Run a tool with the given arguments
      tags:
      - ToolRuntime
  /v1/tool-runtime/list-tools:
    get:
      parameters:
      - in: query
        name: tool_group_id
        required: false
        schema:
          type: string
      - in: query
        name: mcp_endpoint
        required: false
        schema:
          $ref: '#/components/schemas/URL'
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/jsonl:
              schema:
                $ref: '#/components/schemas/ToolDef'
          description: OK
      tags:
      - ToolRuntime
  /v1/tool-runtime/rag-tool/insert:
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsertRequest'
        required: true
      responses:
        '200':
          description: OK
      summary: Index documents so they can be used by the RAG system
      tags:
      - ToolRuntime
  /v1/tool-runtime/rag-tool/query:
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RAGQueryResult'
          description: OK
      summary: Query the RAG system for context; typically invoked by the agent
      tags:
      - ToolRuntime
  /v1/toolgroups:
    get:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListToolGroupsResponse'
          description: OK
      summary: List tool groups with optional provider
      tags:
      - ToolGroups
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterToolGroupRequest'
        required: true
      responses:
        '200':
          description: OK
      summary: Register a tool group
      tags:
      - ToolGroups
  /v1/toolgroups/{toolgroup_id}:
    delete:
      parameters:
      - in: path
        name: toolgroup_id
        required: true
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
      summary: Unregister a tool group
      tags:
      - ToolGroups
    get:
      parameters:
      - in: path
        name: toolgroup_id
        required: true
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolGroup'
          description: OK
      tags:
      - ToolGroups
  /v1/tools:
    get:
      parameters:
      - in: query
        name: toolgroup_id
        required: false
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListToolsResponse'
          description: OK
      summary: List tools with optional tool group
      tags:
      - ToolGroups
  /v1/tools/{tool_name}:
    get:
      parameters:
      - in: path
        name: tool_name
        required: true
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tool'
          description: OK
      tags:
      - ToolGroups
  /v1/vector-dbs:
    get:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVectorDBsResponse'
          description: OK
      tags:
      - VectorDBs
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterVectorDbRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VectorDB'
          description: OK
      tags:
      - VectorDBs
  /v1/vector-dbs/{vector_db_id}:
    delete:
      parameters:
      - in: path
        name: vector_db_id
        required: true
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
      tags:
      - VectorDBs
    get:
      parameters:
      - in: path
        name: vector_db_id
        required: true
        schema:
          type: string
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/VectorDB'
          description: OK
      tags:
      - VectorDBs
  /v1/vector-io/insert:
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsertChunksRequest'
        required: true
      responses:
        '200':
          description: OK
      tags:
      - VectorIO
  /v1/vector-io/query:
    post:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryChunksRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryChunksResponse'
          description: OK
      tags:
      - VectorIO
  /v1/version:
    get:
      parameters:
      - description: JSON-encoded provider data which will be made available to the
          adapter servicing the API
        in: header
        name: X-LlamaStack-Provider-Data
        required: false
        schema:
          type: string
      - description: Version of the client making the request. This is used to ensure
          that the client and server are compatible.
        in: header
        name: X-LlamaStack-Client-Version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionInfo'
          description: OK
      tags:
      - Inspect
servers:
- url: http://any-hosted-llama-stack.com
tags:
- description: <SchemaDefinition schemaRef="#/components/schemas/AgentCandidate" />
  name: AgentCandidate
- description: <SchemaDefinition schemaRef="#/components/schemas/AgentConfig" />
  name: AgentConfig
- description: <SchemaDefinition schemaRef="#/components/schemas/AgentCreateResponse"
    />
  name: AgentCreateResponse
- description: <SchemaDefinition schemaRef="#/components/schemas/AgentSessionCreateResponse"
    />
  name: AgentSessionCreateResponse
- description: <SchemaDefinition schemaRef="#/components/schemas/AgentStepResponse"
    />
  name: AgentStepResponse
- description: <SchemaDefinition schemaRef="#/components/schemas/AgentTool" />
  name: AgentTool
- description: <SchemaDefinition schemaRef="#/components/schemas/AgentTurnInputType"
    />
  name: AgentTurnInputType
- description: 'Streamed agent execution response.


    <SchemaDefinition schemaRef="#/components/schemas/AgentTurnResponseEvent" />'
  name: AgentTurnResponseEvent
- description: <SchemaDefinition schemaRef="#/components/schemas/AgentTurnResponseStepCompletePayload"
    />
  name: AgentTurnResponseStepCompletePayload
- description: <SchemaDefinition schemaRef="#/components/schemas/AgentTurnResponseStepProgressPayload"
    />
  name: AgentTurnResponseStepProgressPayload
- description: <SchemaDefinition schemaRef="#/components/schemas/AgentTurnResponseStepStartPayload"
    />
  name: AgentTurnResponseStepStartPayload
- description: 'streamed agent turn completion response.


    <SchemaDefinition schemaRef="#/components/schemas/AgentTurnResponseStreamChunk"
    />'
  name: AgentTurnResponseStreamChunk
- description: <SchemaDefinition schemaRef="#/components/schemas/AgentTurnResponseTurnCompletePayload"
    />
  name: AgentTurnResponseTurnCompletePayload
- description: <SchemaDefinition schemaRef="#/components/schemas/AgentTurnResponseTurnStartPayload"
    />
  name: AgentTurnResponseTurnStartPayload
- name: Agents
- description: <SchemaDefinition schemaRef="#/components/schemas/AggregationFunctionType"
    />
  name: AggregationFunctionType
- description: <SchemaDefinition schemaRef="#/components/schemas/AppEvalTaskConfig"
    />
  name: AppEvalTaskConfig
- description: <SchemaDefinition schemaRef="#/components/schemas/AppendRowsRequest"
    />
  name: AppendRowsRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/ArrayType" />
  name: ArrayType
- description: <SchemaDefinition schemaRef="#/components/schemas/BasicScoringFnParams"
    />
  name: BasicScoringFnParams
- description: <SchemaDefinition schemaRef="#/components/schemas/BatchChatCompletionRequest"
    />
  name: BatchChatCompletionRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/BatchChatCompletionResponse"
    />
  name: BatchChatCompletionResponse
- description: <SchemaDefinition schemaRef="#/components/schemas/BatchCompletionRequest"
    />
  name: BatchCompletionRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/BatchCompletionResponse"
    />
  name: BatchCompletionResponse
- name: BatchInference (Coming Soon)
- description: <SchemaDefinition schemaRef="#/components/schemas/BenchmarkEvalTaskConfig"
    />
  name: BenchmarkEvalTaskConfig
- description: <SchemaDefinition schemaRef="#/components/schemas/BooleanType" />
  name: BooleanType
- description: <SchemaDefinition schemaRef="#/components/schemas/BuiltinTool" />
  name: BuiltinTool
- description: <SchemaDefinition schemaRef="#/components/schemas/CancelTrainingJobRequest"
    />
  name: CancelTrainingJobRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/ChatCompletionInputType"
    />
  name: ChatCompletionInputType
- description: <SchemaDefinition schemaRef="#/components/schemas/ChatCompletionRequest"
    />
  name: ChatCompletionRequest
- description: 'Chat completion response.


    <SchemaDefinition schemaRef="#/components/schemas/ChatCompletionResponse" />'
  name: ChatCompletionResponse
- description: 'Chat completion response event.


    <SchemaDefinition schemaRef="#/components/schemas/ChatCompletionResponseEvent"
    />'
  name: ChatCompletionResponseEvent
- description: <SchemaDefinition schemaRef="#/components/schemas/ChatCompletionResponseEventType"
    />
  name: ChatCompletionResponseEventType
- description: 'SSE-stream of these events.


    <SchemaDefinition schemaRef="#/components/schemas/ChatCompletionResponseStreamChunk"
    />'
  name: ChatCompletionResponseStreamChunk
- description: 'Checkpoint created during training runs


    <SchemaDefinition schemaRef="#/components/schemas/Checkpoint" />'
  name: Checkpoint
- description: <SchemaDefinition schemaRef="#/components/schemas/CompletionInputType"
    />
  name: CompletionInputType
- description: <SchemaDefinition schemaRef="#/components/schemas/CompletionMessage"
    />
  name: CompletionMessage
- description: <SchemaDefinition schemaRef="#/components/schemas/CompletionRequest"
    />
  name: CompletionRequest
- description: 'Completion response.


    <SchemaDefinition schemaRef="#/components/schemas/CompletionResponse" />'
  name: CompletionResponse
- description: 'streamed completion response.


    <SchemaDefinition schemaRef="#/components/schemas/CompletionResponseStreamChunk"
    />'
  name: CompletionResponseStreamChunk
- description: <SchemaDefinition schemaRef="#/components/schemas/ContentDelta" />
  name: ContentDelta
- description: <SchemaDefinition schemaRef="#/components/schemas/CreateAgentRequest"
    />
  name: CreateAgentRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/CreateAgentSessionRequest"
    />
  name: CreateAgentSessionRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/CreateAgentTurnRequest"
    />
  name: CreateAgentTurnRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/DPOAlignmentConfig"
    />
  name: DPOAlignmentConfig
- description: <SchemaDefinition schemaRef="#/components/schemas/DataConfig" />
  name: DataConfig
- description: <SchemaDefinition schemaRef="#/components/schemas/Dataset" />
  name: Dataset
- description: <SchemaDefinition schemaRef="#/components/schemas/DatasetFormat" />
  name: DatasetFormat
- name: DatasetIO
- name: Datasets
- description: <SchemaDefinition schemaRef="#/components/schemas/DefaultRAGQueryGeneratorConfig"
    />
  name: DefaultRAGQueryGeneratorConfig
- description: <SchemaDefinition schemaRef="#/components/schemas/EfficiencyConfig"
    />
  name: EfficiencyConfig
- description: <SchemaDefinition schemaRef="#/components/schemas/EmbeddingsRequest"
    />
  name: EmbeddingsRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/EmbeddingsResponse"
    />
  name: EmbeddingsResponse
- name: Eval
- description: <SchemaDefinition schemaRef="#/components/schemas/EvalTask" />
  name: EvalTask
- name: EvalTasks
- description: <SchemaDefinition schemaRef="#/components/schemas/EvaluateResponse"
    />
  name: EvaluateResponse
- description: <SchemaDefinition schemaRef="#/components/schemas/EvaluateRowsRequest"
    />
  name: EvaluateRowsRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/GreedySamplingStrategy"
    />
  name: GreedySamplingStrategy
- description: <SchemaDefinition schemaRef="#/components/schemas/HealthInfo" />
  name: HealthInfo
- description: <SchemaDefinition schemaRef="#/components/schemas/ImageContentItem"
    />
  name: ImageContentItem
- description: <SchemaDefinition schemaRef="#/components/schemas/ImageDelta" />
  name: ImageDelta
- name: Inference
- description: <SchemaDefinition schemaRef="#/components/schemas/InferenceStep" />
  name: InferenceStep
- description: <SchemaDefinition schemaRef="#/components/schemas/InsertChunksRequest"
    />
  name: InsertChunksRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/InsertRequest" />
  name: InsertRequest
- name: Inspect
- description: <SchemaDefinition schemaRef="#/components/schemas/InterleavedContent"
    />
  name: InterleavedContent
- description: <SchemaDefinition schemaRef="#/components/schemas/InterleavedContentItem"
    />
  name: InterleavedContentItem
- description: <SchemaDefinition schemaRef="#/components/schemas/InvokeToolRequest"
    />
  name: InvokeToolRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/Job" />
  name: Job
- description: <SchemaDefinition schemaRef="#/components/schemas/JobStatus" />
  name: JobStatus
- description: <SchemaDefinition schemaRef="#/components/schemas/JsonType" />
  name: JsonType
- description: <SchemaDefinition schemaRef="#/components/schemas/LLMAsJudgeScoringFnParams"
    />
  name: LLMAsJudgeScoringFnParams
- description: <SchemaDefinition schemaRef="#/components/schemas/LLMRAGQueryGeneratorConfig"
    />
  name: LLMRAGQueryGeneratorConfig
- description: <SchemaDefinition schemaRef="#/components/schemas/ListDatasetsResponse"
    />
  name: ListDatasetsResponse
- description: <SchemaDefinition schemaRef="#/components/schemas/ListEvalTasksResponse"
    />
  name: ListEvalTasksResponse
- description: <SchemaDefinition schemaRef="#/components/schemas/ListModelsResponse"
    />
  name: ListModelsResponse
- description: <SchemaDefinition schemaRef="#/components/schemas/ListPostTrainingJobsResponse"
    />
  name: ListPostTrainingJobsResponse
- description: <SchemaDefinition schemaRef="#/components/schemas/ListProvidersResponse"
    />
  name: ListProvidersResponse
- description: <SchemaDefinition schemaRef="#/components/schemas/ListRoutesResponse"
    />
  name: ListRoutesResponse
- description: <SchemaDefinition schemaRef="#/components/schemas/ListScoringFunctionsResponse"
    />
  name: ListScoringFunctionsResponse
- description: <SchemaDefinition schemaRef="#/components/schemas/ListShieldsResponse"
    />
  name: ListShieldsResponse
- description: <SchemaDefinition schemaRef="#/components/schemas/ListToolGroupsResponse"
    />
  name: ListToolGroupsResponse
- description: <SchemaDefinition schemaRef="#/components/schemas/ListToolsResponse"
    />
  name: ListToolsResponse
- description: <SchemaDefinition schemaRef="#/components/schemas/ListVectorDBsResponse"
    />
  name: ListVectorDBsResponse
- description: <SchemaDefinition schemaRef="#/components/schemas/LogEventRequest"
    />
  name: LogEventRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/LogSeverity" />
  name: LogSeverity
- description: <SchemaDefinition schemaRef="#/components/schemas/LoraFinetuningConfig"
    />
  name: LoraFinetuningConfig
- description: <SchemaDefinition schemaRef="#/components/schemas/MemoryRetrievalStep"
    />
  name: MemoryRetrievalStep
- description: <SchemaDefinition schemaRef="#/components/schemas/Message" />
  name: Message
- description: <SchemaDefinition schemaRef="#/components/schemas/MetricEvent" />
  name: MetricEvent
- description: <SchemaDefinition schemaRef="#/components/schemas/Model" />
  name: Model
- description: <SchemaDefinition schemaRef="#/components/schemas/ModelCandidate" />
  name: ModelCandidate
- description: <SchemaDefinition schemaRef="#/components/schemas/ModelType" />
  name: ModelType
- name: Models
- description: <SchemaDefinition schemaRef="#/components/schemas/NumberType" />
  name: NumberType
- description: <SchemaDefinition schemaRef="#/components/schemas/ObjectType" />
  name: ObjectType
- description: <SchemaDefinition schemaRef="#/components/schemas/OptimizerConfig"
    />
  name: OptimizerConfig
- description: <SchemaDefinition schemaRef="#/components/schemas/OptimizerType" />
  name: OptimizerType
- description: <SchemaDefinition schemaRef="#/components/schemas/PaginatedRowsResult"
    />
  name: PaginatedRowsResult
- description: <SchemaDefinition schemaRef="#/components/schemas/ParamType" />
  name: ParamType
- name: PostTraining (Coming Soon)
- description: <SchemaDefinition schemaRef="#/components/schemas/PostTrainingJob"
    />
  name: PostTrainingJob
- description: 'Artifacts of a finetuning job.


    <SchemaDefinition schemaRef="#/components/schemas/PostTrainingJobArtifactsResponse"
    />'
  name: PostTrainingJobArtifactsResponse
- description: 'Status of a finetuning job.


    <SchemaDefinition schemaRef="#/components/schemas/PostTrainingJobStatusResponse"
    />'
  name: PostTrainingJobStatusResponse
- description: <SchemaDefinition schemaRef="#/components/schemas/PreferenceOptimizeRequest"
    />
  name: PreferenceOptimizeRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/ProviderInfo" />
  name: ProviderInfo
- description: <SchemaDefinition schemaRef="#/components/schemas/QATFinetuningConfig"
    />
  name: QATFinetuningConfig
- description: <SchemaDefinition schemaRef="#/components/schemas/QueryChunksRequest"
    />
  name: QueryChunksRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/QueryChunksResponse"
    />
  name: QueryChunksResponse
- description: <SchemaDefinition schemaRef="#/components/schemas/QueryCondition" />
  name: QueryCondition
- description: <SchemaDefinition schemaRef="#/components/schemas/QueryConditionOp"
    />
  name: QueryConditionOp
- description: <SchemaDefinition schemaRef="#/components/schemas/QueryRequest" />
  name: QueryRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/QuerySpanTreeResponse"
    />
  name: QuerySpanTreeResponse
- description: <SchemaDefinition schemaRef="#/components/schemas/QuerySpansResponse"
    />
  name: QuerySpansResponse
- description: <SchemaDefinition schemaRef="#/components/schemas/QueryTracesResponse"
    />
  name: QueryTracesResponse
- description: <SchemaDefinition schemaRef="#/components/schemas/RAGDocument" />
  name: RAGDocument
- description: <SchemaDefinition schemaRef="#/components/schemas/RAGQueryConfig" />
  name: RAGQueryConfig
- description: <SchemaDefinition schemaRef="#/components/schemas/RAGQueryGeneratorConfig"
    />
  name: RAGQueryGeneratorConfig
- description: <SchemaDefinition schemaRef="#/components/schemas/RAGQueryResult" />
  name: RAGQueryResult
- description: <SchemaDefinition schemaRef="#/components/schemas/RegexParserScoringFnParams"
    />
  name: RegexParserScoringFnParams
- description: <SchemaDefinition schemaRef="#/components/schemas/RegisterDatasetRequest"
    />
  name: RegisterDatasetRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/RegisterEvalTaskRequest"
    />
  name: RegisterEvalTaskRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/RegisterModelRequest"
    />
  name: RegisterModelRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/RegisterScoringFunctionRequest"
    />
  name: RegisterScoringFunctionRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/RegisterShieldRequest"
    />
  name: RegisterShieldRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/RegisterToolGroupRequest"
    />
  name: RegisterToolGroupRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/RegisterVectorDbRequest"
    />
  name: RegisterVectorDbRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/ResponseFormat" />
  name: ResponseFormat
- description: <SchemaDefinition schemaRef="#/components/schemas/RouteInfo" />
  name: RouteInfo
- description: <SchemaDefinition schemaRef="#/components/schemas/RunEvalRequest" />
  name: RunEvalRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/RunShieldRequest"
    />
  name: RunShieldRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/RunShieldResponse"
    />
  name: RunShieldResponse
- name: Safety
- description: <SchemaDefinition schemaRef="#/components/schemas/SafetyViolation"
    />
  name: SafetyViolation
- description: <SchemaDefinition schemaRef="#/components/schemas/SamplingParams" />
  name: SamplingParams
- description: <SchemaDefinition schemaRef="#/components/schemas/SaveSpansToDatasetRequest"
    />
  name: SaveSpansToDatasetRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/ScoreBatchRequest"
    />
  name: ScoreBatchRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/ScoreBatchResponse"
    />
  name: ScoreBatchResponse
- description: <SchemaDefinition schemaRef="#/components/schemas/ScoreRequest" />
  name: ScoreRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/ScoreResponse" />
  name: ScoreResponse
- name: Scoring
- description: <SchemaDefinition schemaRef="#/components/schemas/ScoringFn" />
  name: ScoringFn
- name: ScoringFunctions
- description: <SchemaDefinition schemaRef="#/components/schemas/ScoringResult" />
  name: ScoringResult
- description: 'A single session of an interaction with an Agentic System.


    <SchemaDefinition schemaRef="#/components/schemas/Session" />'
  name: Session
- description: 'A safety shield resource that can be used to check content


    <SchemaDefinition schemaRef="#/components/schemas/Shield" />'
  name: Shield
- description: <SchemaDefinition schemaRef="#/components/schemas/ShieldCallStep" />
  name: ShieldCallStep
- name: Shields
- description: <SchemaDefinition schemaRef="#/components/schemas/Span" />
  name: Span
- description: <SchemaDefinition schemaRef="#/components/schemas/SpanEndPayload" />
  name: SpanEndPayload
- description: <SchemaDefinition schemaRef="#/components/schemas/SpanStartPayload"
    />
  name: SpanStartPayload
- description: <SchemaDefinition schemaRef="#/components/schemas/SpanStatus" />
  name: SpanStatus
- description: <SchemaDefinition schemaRef="#/components/schemas/SpanWithStatus" />
  name: SpanWithStatus
- description: <SchemaDefinition schemaRef="#/components/schemas/StopReason" />
  name: StopReason
- description: <SchemaDefinition schemaRef="#/components/schemas/StringType" />
  name: StringType
- description: <SchemaDefinition schemaRef="#/components/schemas/StructuredLogEvent"
    />
  name: StructuredLogEvent
- description: <SchemaDefinition schemaRef="#/components/schemas/SupervisedFineTuneRequest"
    />
  name: SupervisedFineTuneRequest
- description: <SchemaDefinition schemaRef="#/components/schemas/SyntheticDataGenerateRequest"
    />
  name: SyntheticDataGenerateRequest
- name: SyntheticDataGeneration (Coming Soon)
- description: 'Response from the synthetic data generation. Batch of (prompt, response,
    score) tuples that pass the threshold.


    <SchemaDefinition schemaRef="#/components/schemas/SyntheticDataGenerationResponse"
    />'
  name: SyntheticDataGenerationResponse
- description: <SchemaDefinition schemaRef="#/components/schemas/SystemMessage" />
  name: SystemMessage
- name: Telemetry
- description: <SchemaDefinition schemaRef="#/components/schemas/TextContentItem"
    />
  name: TextContentItem
- description: <SchemaDefinition schemaRef="#/components/schemas/TextDelta" />
  name: TextDelta
- description: <SchemaDefinition schemaRef="#/components/schemas/TokenLogProbs" />
  name: TokenLogProbs
- description: <SchemaDefinition schemaRef="#/components/schemas/Tool" />
  name: Tool
- description: <SchemaDefinition schemaRef="#/components/schemas/ToolCall" />
  name: ToolCall
- description: <SchemaDefinition schemaRef="#/components/schemas/ToolCallDelta" />
  name: ToolCallDelta
- description: <SchemaDefinition schemaRef="#/components/schemas/ToolCallParseStatus"
    />
  name: ToolCallParseStatus
- description: <SchemaDefinition schemaRef="#/components/schemas/ToolChoice" />
  name: ToolChoice
- description: <SchemaDefinition schemaRef="#/components/schemas/ToolDef" />
  name: ToolDef
- description: <SchemaDefinition schemaRef="#/components/schemas/ToolDefinition" />
  name: ToolDefinition
- description: <SchemaDefinition schemaRef="#/components/schemas/ToolExecutionStep"
    />
  name: ToolExecutionStep
- description: <SchemaDefinition schemaRef="#/components/schemas/ToolGroup" />
  name: ToolGroup
- name: ToolGroups
- description: <SchemaDefinition schemaRef="#/components/schemas/ToolHost" />
  name: ToolHost
- description: <SchemaDefinition schemaRef="#/components/schemas/ToolInvocationResult"
    />
  name: ToolInvocationResult
- description: <SchemaDefinition schemaRef="#/components/schemas/ToolParamDefinition"
    />
  name: ToolParamDefinition
- description: <SchemaDefinition schemaRef="#/components/schemas/ToolParameter" />
  name: ToolParameter
- description: "This Enum refers to the prompt format for calling custom / zero shot\
    \ tools\n\n`json` --\n    Refers to the json format for calling tools.\n    The\
    \ json format takes the form like\n    {\n        \"type\": \"function\",\n  \
    \      \"function\" : {\n            \"name\": \"function_name\",\n          \
    \  \"description\": \"function_description\",\n            \"parameters\": {...}\n\
    \        }\n    }\n\n`function_tag` --\n    This is an example of how you could\
    \ define\n    your own user defined format for making tool calls.\n    The function_tag\
    \ format looks like this,\n    <function=function_name>(parameters)</function>\n\
    \nThe detailed prompts for each of these formats are added to llama cli\n\n<SchemaDefinition\
    \ schemaRef=\"#/components/schemas/ToolPromptFormat\" />"
  name: ToolPromptFormat
- description: <SchemaDefinition schemaRef="#/components/schemas/ToolResponse" />
  name: ToolResponse
- description: <SchemaDefinition schemaRef="#/components/schemas/ToolResponseMessage"
    />
  name: ToolResponseMessage
- name: ToolRuntime
- description: <SchemaDefinition schemaRef="#/components/schemas/TopKSamplingStrategy"
    />
  name: TopKSamplingStrategy
- description: <SchemaDefinition schemaRef="#/components/schemas/TopPSamplingStrategy"
    />
  name: TopPSamplingStrategy
- description: <SchemaDefinition schemaRef="#/components/schemas/Trace" />
  name: Trace
- description: <SchemaDefinition schemaRef="#/components/schemas/TrainingConfig" />
  name: TrainingConfig
- description: 'A single turn in an interaction with an Agentic System.


    <SchemaDefinition schemaRef="#/components/schemas/Turn" />'
  name: Turn
- description: <SchemaDefinition schemaRef="#/components/schemas/URL" />
  name: URL
- description: <SchemaDefinition schemaRef="#/components/schemas/UnionType" />
  name: UnionType
- description: <SchemaDefinition schemaRef="#/components/schemas/UnstructuredLogEvent"
    />
  name: UnstructuredLogEvent
- description: <SchemaDefinition schemaRef="#/components/schemas/UserMessage" />
  name: UserMessage
- description: <SchemaDefinition schemaRef="#/components/schemas/VectorDB" />
  name: VectorDB
- name: VectorDBs
- name: VectorIO
- description: <SchemaDefinition schemaRef="#/components/schemas/VersionInfo" />
  name: VersionInfo
- description: <SchemaDefinition schemaRef="#/components/schemas/ViolationLevel" />
  name: ViolationLevel
x-tagGroups:
- name: Operations
  tags:
  - Agents
  - BatchInference (Coming Soon)
  - DatasetIO
  - Datasets
  - Eval
  - EvalTasks
  - Inference
  - Inspect
  - Models
  - PostTraining (Coming Soon)
  - Safety
  - Scoring
  - ScoringFunctions
  - Shields
  - SyntheticDataGeneration (Coming Soon)
  - Telemetry
  - ToolGroups
  - ToolRuntime
  - VectorDBs
  - VectorIO
- name: Types
  tags:
  - AgentCandidate
  - AgentConfig
  - AgentCreateResponse
  - AgentSessionCreateResponse
  - AgentStepResponse
  - AgentTool
  - AgentTurnInputType
  - AgentTurnResponseEvent
  - AgentTurnResponseStepCompletePayload
  - AgentTurnResponseStepProgressPayload
  - AgentTurnResponseStepStartPayload
  - AgentTurnResponseStreamChunk
  - AgentTurnResponseTurnCompletePayload
  - AgentTurnResponseTurnStartPayload
  - AggregationFunctionType
  - AppEvalTaskConfig
  - AppendRowsRequest
  - ArrayType
  - BasicScoringFnParams
  - BatchChatCompletionRequest
  - BatchChatCompletionResponse
  - BatchCompletionRequest
  - BatchCompletionResponse
  - BenchmarkEvalTaskConfig
  - BooleanType
  - BuiltinTool
  - CancelTrainingJobRequest
  - ChatCompletionInputType
  - ChatCompletionRequest
  - ChatCompletionResponse
  - ChatCompletionResponseEvent
  - ChatCompletionResponseEventType
  - ChatCompletionResponseStreamChunk
  - Checkpoint
  - CompletionInputType
  - CompletionMessage
  - CompletionRequest
  - CompletionResponse
  - CompletionResponseStreamChunk
  - ContentDelta
  - CreateAgentRequest
  - CreateAgentSessionRequest
  - CreateAgentTurnRequest
  - DPOAlignmentConfig
  - DataConfig
  - Dataset
  - DatasetFormat
  - DefaultRAGQueryGeneratorConfig
  - EfficiencyConfig
  - EmbeddingsRequest
  - EmbeddingsResponse
  - EvalTask
  - EvaluateResponse
  - EvaluateRowsRequest
  - GreedySamplingStrategy
  - HealthInfo
  - ImageContentItem
  - ImageDelta
  - InferenceStep
  - InsertChunksRequest
  - InsertRequest
  - InterleavedContent
  - InterleavedContentItem
  - InvokeToolRequest
  - Job
  - JobStatus
  - JsonType
  - LLMAsJudgeScoringFnParams
  - LLMRAGQueryGeneratorConfig
  - ListDatasetsResponse
  - ListEvalTasksResponse
  - ListModelsResponse
  - ListPostTrainingJobsResponse
  - ListProvidersResponse
  - ListRoutesResponse
  - ListScoringFunctionsResponse
  - ListShieldsResponse
  - ListToolGroupsResponse
  - ListToolsResponse
  - ListVectorDBsResponse
  - LogEventRequest
  - LogSeverity
  - LoraFinetuningConfig
  - MemoryRetrievalStep
  - Message
  - MetricEvent
  - Model
  - ModelCandidate
  - ModelType
  - NumberType
  - ObjectType
  - OptimizerConfig
  - OptimizerType
  - PaginatedRowsResult
  - ParamType
  - PostTrainingJob
  - PostTrainingJobArtifactsResponse
  - PostTrainingJobStatusResponse
  - PreferenceOptimizeRequest
  - ProviderInfo
  - QATFinetuningConfig
  - QueryChunksRequest
  - QueryChunksResponse
  - QueryCondition
  - QueryConditionOp
  - QueryRequest
  - QuerySpanTreeResponse
  - QuerySpansResponse
  - QueryTracesResponse
  - RAGDocument
  - RAGQueryConfig
  - RAGQueryGeneratorConfig
  - RAGQueryResult
  - RegexParserScoringFnParams
  - RegisterDatasetRequest
  - RegisterEvalTaskRequest
  - RegisterModelRequest
  - RegisterScoringFunctionRequest
  - RegisterShieldRequest
  - RegisterToolGroupRequest
  - RegisterVectorDbRequest
  - ResponseFormat
  - RouteInfo
  - RunEvalRequest
  - RunShieldRequest
  - RunShieldResponse
  - SafetyViolation
  - SamplingParams
  - SaveSpansToDatasetRequest
  - ScoreBatchRequest
  - ScoreBatchResponse
  - ScoreRequest
  - ScoreResponse
  - ScoringFn
  - ScoringResult
  - Session
  - Shield
  - ShieldCallStep
  - Span
  - SpanEndPayload
  - SpanStartPayload
  - SpanStatus
  - SpanWithStatus
  - StopReason
  - StringType
  - StructuredLogEvent
  - SupervisedFineTuneRequest
  - SyntheticDataGenerateRequest
  - SyntheticDataGenerationResponse
  - SystemMessage
  - TextContentItem
  - TextDelta
  - TokenLogProbs
  - Tool
  - ToolCall
  - ToolCallDelta
  - ToolCallParseStatus
  - ToolChoice
  - ToolDef
  - ToolDefinition
  - ToolExecutionStep
  - ToolGroup
  - ToolHost
  - ToolInvocationResult
  - ToolParamDefinition
  - ToolParameter
  - ToolPromptFormat
  - ToolResponse
  - ToolResponseMessage
  - TopKSamplingStrategy
  - TopPSamplingStrategy
  - Trace
  - TrainingConfig
  - Turn
  - URL
  - UnionType
  - UnstructuredLogEvent
  - UserMessage
  - VectorDB
  - VersionInfo
  - ViolationLevel
